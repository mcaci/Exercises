package conway;

import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

/**
 * Created by mcaci on 9/5/17.
 */
public class ConwayTest {

    ConwaySequenceCalculator conwaySequenceCalculator;

    @Before
    public void setUp() {
        this.conwaySequenceCalculator = new ConwaySequenceCalculator();
    }

    private String computeSequence(String sequence, int level) {
        return conwaySequenceCalculator.conway(sequence, level);
    }

    @Test
    public void testConwayWithBase1Level1() throws Exception {
        assertEquals("1", computeSequence("1", 1));
    }

    @Test
    public void testConwayWithBase1Level2() throws Exception {
        assertEquals("11", computeSequence("1", 2));
    }

    @Test
    public void testConwayWithBase111Level2() throws Exception {
        assertEquals("31", computeSequence("111", 2));
    }

    @Test
    public void testConwayWithBase12Level2() throws Exception {
        assertEquals("1112", computeSequence("12", 2));
    }

    @Test
    public void testConwayWithBase1231Level2() throws Exception {
        assertEquals("11121311", computeSequence("1231", 2));
    }

    @Test
    public void testConwayWithBase12245551Level2() throws Exception {
        assertEquals("1122143511", computeSequence("12245551", 2));
    }

    @Test
    public void testConwayWithBase1Level3() throws Exception {
        assertEquals("21", computeSequence("1", 3));
    }

    @Test
    public void testConwayWithBase2Level3() throws Exception {
        assertEquals("1112", computeSequence("2", 3));
    }

    @Test
    public void testConwayWithBase12245551Level3() throws Exception {
        assertEquals("21221114131521", computeSequence("12245551", 3));
    }

    @Test
    public void testConwayWithBase12245551Level6() throws Exception {
        assertEquals("3122112211131221141321232115312211", computeSequence("12245551", 6));
    }

    @Test
    public void testConwayWithBase25Level10() throws Exception {
        assertEquals("3113112221131112311332211231131122211311123113322115", computeSequence("25", 10));
    }

    @Test
    public void testConwayWithBase33Level25() throws Exception {
        assertEqualscomputeSequence("33", 25));
    }
}
